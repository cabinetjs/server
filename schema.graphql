# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Board {
  id: String!
  uri: String!
  code: String!
  name: String!
  description: String
  createdAt: DateTime!
  openingPosts: [Post!]!
  posts: [Post!]!
  postCount: Int!
  mediaCount: Int!
  latestAttachment: Attachment
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Thumbnail {
  id: String!
  width: Int!
  height: Int!
  size: Int!
  filesize: Int!
  url: String!
}

type Attachment {
  id: String!
  uri: String!
  uid: String!
  url: String!
  thumbnailUrl: String
  size: Int!
  name: String!
  extension: String!
  width: Int
  height: Int
  mimeType: String
  hash: String!
  sizedThumbnail(size: Int!): Thumbnail!
}

type Post {
  id: String!
  uri: String!
  parent: String
  no: Int!
  title: String
  content: String
  author: String
  writtenAt: DateTime!
  createdAt: DateTime!
  replies: [Post!]!
  lastReply: Post
  replyCount: Int!
  attachmentCount: Int!
  attachments: [Attachment!]!
}

type DataSource {
  id: String!
  type: String!
  postCount: Int!
  mediaCount: Int!
  boardCount: Int!
  latestAttachment: Attachment
  boards: [Board!]!
  openingPosts: [Post!]!
  attachments: [Attachment!]!
}

type CrawlerLog {
  id: Int!
  startedAt: DateTime!
  finishedAt: DateTime!
  success: Boolean!
  boardCount: Int!
  postCount: Int!
  attachmentCount: Int!
}

type Statistic {
  boardCount: Int!
  postCount: Int!
  attachmentCount: Int!
  fileSize: BigInt!
  lastCrawlingLog: CrawlerLog
  oldBoardCount: Int!
  oldPostCount: Int!
  oldAttachmentCount: Int!
  oldFileSize: BigInt!
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

type Query {
  dataSource(name: String!): DataSource
  dataSources: [DataSource!]!
  dataSourceCount: Int!
  post(id: String!): Post
  posts(skip: Int, take: Int): [Post!]!
  board(id: String!): Board
  boards(skip: Int, take: Int): [Board!]!
  statistic(date: DateTime, timeSpanValue: Int!, timeSpanUnit: TimeSpanUnit!): Statistic!
}

enum TimeSpanUnit {
  Minute
  Hour
  Day
  Week
  Month
  Year
}